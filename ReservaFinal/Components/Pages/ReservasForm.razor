@page "/reservas/nueva"
@page "/reservas/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioReservas _repositorio;
@inject IRepositorioClientes _repositorioClientes;
@inject IRepositorioHabitaciones _repositorioHabitaciones;

<h2>@_mensaje Reserva</h2>

@if (_clientes == null || _habitaciones == null)
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Cargando...</span>
    </div>
}
else
{
<EditForm Model="_reserva" FormName="frmReserva" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="row mb-3">
        <label for="ddlCliente" class="col-2 col-form-label">Cliente</label>
        <div class="col-10">
                <InputSelect id="ddlCliente" class="form-control" @bind-Value="_reserva.ClienteId" required>
                    <option value="">Seleccione un cliente</option>
                    @foreach (var cliente in _clientes)
                    {
                        <option value="@cliente.ClienteId">@cliente.Nombre</option>
                    }
                </InputSelect>
            <ValidationMessage For="()=>_reserva.ClienteId" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="ddlHabitacion" class="col-2 col-form-label">Habitación</label>
        <div class="col-10">
            <InputSelect id="ddlHabitacion" class="form-control" @bind-Value="_reserva.HabitacionId">
                <option value="">Seleccione una habitación</option>
                @foreach (var habitacion in _habitaciones)
                {
                    <option value="@habitacion.HabitacionId">@habitacion.TipoHabitacion</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>_reserva.HabitacionId" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="txtFechaEntrada" class="col-2 col-form-label">Fecha de Entrada</label>
        <div class="col-10">
            <InputDate id="txtFechaEntrada" class="form-control" @bind-Value="_reserva.FechaEntrada" />
            <ValidationMessage For="()=>_reserva.FechaEntrada" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="txtFechaSalida" class="col-2 col-form-label">Fecha de Salida</label>
        <div class="col-10">
            <InputDate id="txtFechaSalida" class="form-control" @bind-Value="_reserva.FechaSalida" />
            <ValidationMessage For="()=>_reserva.FechaSalida" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>
}
@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Reserva? _reserva = new();
    private List<Cliente>? _clientes;
    private List<Habitacion>? _habitaciones;

    protected override async Task OnInitializedAsync()
    {
        _clientes = await _repositorioClientes.GetAll();
        _habitaciones = await _repositorioHabitaciones.GetAll();

        if (Id > 0)
        {
            _reserva = await _repositorio.Get(Id);
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nueva";
        }
    }

    private async void Guardar()
    {
        if (_reserva.ClienteId <= 0)
        {
            // Manejar el caso cuando no se selecciona un cliente válido
            return;
        }
        if (Id > 0)
        {
            await _repositorio.Update(Id, _reserva!);
        }
        else
        {
            await _repositorio.Add(_reserva!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/reservas");
    }
}