@page "/habitaciones/nueva"
@page "/habitaciones/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioHabitaciones _repositorio;

<h2>@_mensaje Habitacion</h2>
<EditForm Model="_habitacion" FormName="frmHabitacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtTipoHabitacion" class="col-2 col-form-label">Tipo de Habitacion (Estandar/Suite/Master)</label>
        <div class="col-10">
            <InputText id="txtTipoHabitacion" class="form-control" @bind-Value="_habitacion.TipoHabitacion" />
            <ValidationMessage For="()=>_habitacion.TipoHabitacion" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtEstado" class="col-2 col-form-label">Estado (Disponible/Ocupado/Mantenimiento)</label>
        <div class="col-10">
            <InputText id="txtEstado" class="form-control" @bind-Value="_habitacion.Estado" />
            <ValidationMessage For="()=>_habitacion.Estado" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtPrecioNoche" class="col-2 col-form-label">Precio por noche</label>
        <div class="col-10">
            <InputNumber id="txtPrecioNoche" class="form-control" @bind-Value="_habitacion.PrecioNoche" />
            <ValidationMessage For="()=>_habitacion.PrecioNoche" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Habitacion? _habitacion = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            _habitacion = await _repositorio.Get(Id);
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nueva";
        }
    }

    private async void Guardar()
    {
        if (Id > 0)
        {
            await _repositorio.Update(Id, _habitacion!);
        }
        else
        {
            await _repositorio.Add(_habitacion!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/habitaciones");
    }
}